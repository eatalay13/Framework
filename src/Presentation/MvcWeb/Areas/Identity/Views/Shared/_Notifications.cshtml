@using Core.Infrastructure.NotificationService
@inject INotificationService NotificationService
@{
    var notes = NotificationService.GetNotifies();
    if (notes != null)
    {
        foreach (var note in notes)
        {
            var cssStyle = "";
            var iconClass = "";
            switch (note.Type)
            {
                case NotifyType.Success:
                    cssStyle = "alert-light-success";
                    iconClass = "flaticon2-checkmark";
                    break;
                case NotifyType.Error:
                    cssStyle = "alert-light-danger";
                    iconClass = "flaticon2-cancel";
                    break;
                case NotifyType.Warning:
                    cssStyle = "alert-light-warning";
                    iconClass = "flaticon-warning";
                    break;
            }
            <div class="container-fluid">
                <div class="alert alert-custom alert-notice @cssStyle fade show" role="alert">
                    <div class="alert-icon"><i class="@iconClass"></i></div>
                    <div class="alert-text">
                        @if (note.Encode)
                        {
                            <text>
                                @note.Message
                            </text>
                        }
                        else
                        {
                            <text>
                                @Html.Raw(note.Message)
                            </text>
                        }
                    </div>
                    <div class="alert-close">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true"><i class="ki ki-close"></i></span>
                        </button>
                    </div>
                </div>
            </div>
        }
    }
}
